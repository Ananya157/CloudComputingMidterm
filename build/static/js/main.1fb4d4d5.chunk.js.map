{"version":3,"sources":["Components/Header.js","Components/StudentList.js","Components/StudentListComponent.js","Components/AddStudent.js","Components/AddStudentComponent.js","Components/StudentInfo.js","Components/StudentInfoComponent.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","id","className","Component","StudentList","props","handlePageClick","e","selectedPage","selected","offset","state","perPage","setState","currentPage","loadMoreData","studentList","orgStudentList","validationError","clicked","handleChange","bind","data","this","slice","pageCount","Math","ceil","length","forceUpdate","that","fetch","method","then","responseText","json","response","students","catch","error","console","log","event","target","name","value","result","success","alert","componentDidMount","style","opacity","margin","to","map","student","key","fullname","level","type","onClick","deleteStudent","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","StudentListComponent","AddStudent","changehandler","handleOptionChange","selectedOption","submitHandler","preventDefault","body","email","course","expectation","JSON","stringify","responseMessage","isInstered","onSubmit","htmlFor","onChange","placeholder","checked","AddStudentComponent","StudentInfo","studentInfo","studentId","res","window","location","href","split","url","StudentInfoComponent","App","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1fb4d4d5.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport '../CSS/Header.css';\n\n\nclass HomePage extends Component {\n    render() {\n        return (\n            <div>\n                <div id=\"page-container\" className='mainHeader'>\n                    <div className=\"container sportsClubContainer\">\n                        <span className=\"sportsClubTitle\">\n                            <div className=\"addReviewButton\">\n                                <span>Student Info</span>\n                            </div>\n                        </span>\n                    </div>\n                </div>\n            </div>\n        )\n\n    }\n\n}\n\nexport default HomePage","import React, { Component } from 'react';\nimport '../CSS/Common.css';\nimport { Link } from 'react-router-dom';\nimport ReactPaginate from 'react-paginate';\n\nclass StudentList extends Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            studentList: [],\n            offset: 0,\n            orgStudentList: [],\n            perPage: 5,\n            currentPage: 0,\n            validationError: \"\",\n            clicked: false\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handlePageClick = this.handlePageClick.bind(this);\n    }\n\n     handlePageClick = (e) => {\n        const selectedPage = e.selected;\n        const offset = selectedPage * this.state.perPage;\n\n        this.setState({\n            currentPage: selectedPage,\n            offset: offset\n        }, () => {\n            this.loadMoreData()\n        });\n\n    };\n    loadMoreData() {\n        const data = this.state.orgStudentList;\n        const slice = data.slice(this.state.offset, this.state.offset + this.state.perPage)\n        this.setState({\n            pageCount: Math.ceil(data.length / this.state.perPage),\n            studentList: slice\n        })\n\n    }\n    \n    rerenderParentCallback() {\n        this.forceUpdate();\n    }\n    componentDidMount() {\n        var that = this;\n        fetch('https://kgt1c7bjf4.execute-api.us-east-1.amazonaws.com/dev/students', {\n            method: 'GET'\n        }).then((responseText) => {\n            const response = responseText.json();\n            response.then(function (response) {\n                var data = response.data[0].students;\t\n                var slice = data.slice(that.state.offset, that.state.offset + that.state.perPage)\n                that.setState({\n                    pageCount: Math.ceil(data.length / that.state.perPage),\n                    orgStudentList: response.data[0].students,\n                    studentList: slice\n                })\n            });\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n   deleteStudent(id){\n       console.log(id)\n       var that = this;\n       var url = 'https://kgt1c7bjf4.execute-api.us-east-1.amazonaws.com/dev/students/' + id;\n       fetch(url, {\n            method: 'DELETE'\n        }).then((responseText) => {\n            const response = responseText.json();\n            response.then(function (result) {\n                console.log(result)\n                if (result.success) {\n                    alert('Deleted Student Record');\n                    that.componentDidMount();\n                }\n            }); \n        }).catch(error => {\n            console.log(error)\n        })\n   }\n\n    render() {\n        return (\n\n\n            <div className=\"card cardStyle\" style={{ opacity: \"0.9\" }}>\n                <div className=\"container searchHeader\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-10\">\n                            <br/>\n                            <h2 >List of  Students</h2>\n                         </div>\n                        <div className=\"col-lg-2\" style={{ margin: \"auto\" }}>\n                            <span className=\"email\">\n                                <Link to={`/AddStudent`} >\n                                    <button className=\"individualButton\">  Add Student  </button>\n                                </Link>\n                            </span>\n                        </div>\n                    </div>\n                    <br/>\n                    <br/>\n                    \n                    {\n                        this.state.studentList.length ?\n                            this.state.studentList.map(student => <div key={student.id} className=\"seachHeader\" >\n                                <div className=\"cardStyle\">\n                                    <Link to={`/StudentInfo/${student.id}`} >\n                                        <div className=\"hotelList\">\n                                            <span>{student.fullname}</span>\n                                         </div>\n                                    </Link>\n                                    <div className=\"hotelList\">\n                                        <span>\n                                            Level: {student.level}\n                                        </span>\n                                        <span className=\"email\">\n                                            <Link to={`/UpdateReview/`} >\n                                                <button className=\"individualButton\"> Update </button>\n                                            </Link>\n                                            <button type=\"button\" className=\"individualButton\"  onClick={() => this.deleteStudent(student.id)}>\n                                                Delete\n                                            </button>\n                                        </span>\n                                    </div>\n                                </div>\n                            </div>) : (<span>\n                                {this.state.clicked ? (\n                                    <span className=\"seachHeader\">No students Found</span>\n                                ) : (\n                                        null\n                                    )\n                                }\n                            </span>\n                        )\n                    }\n                    <ReactPaginate\n                    previousLabel={\"prev\"}\n                    nextLabel={\"next\"}\n                    breakLabel={\"...\"}\n                    breakClassName={\"break-me\"}\n                    pageCount={this.state.pageCount}\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={5}\n                    onPageChange={this.handlePageClick}\n                    containerClassName={\"pagination\"}\n                    subContainerClassName={\"pages pagination\"}\n                    activeClassName={\"active\"}/>\n\n                </div>\n            </div>\n\n        )\n    }\n\n}\n\n\nexport default StudentList","import React, { Component } from 'react'\nimport '../CSS/Common.css';\nimport StudentList from './StudentList'\n\nclass StudentListComponent extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\" backgroundImage\">\n                    <div className=\"container\">\n                        <StudentList />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default StudentListComponent","import React, { Component } from 'react';\nimport '../CSS/Common.css';\nimport { Redirect } from 'react-router'\nimport { Link } from 'react-router-dom'\n\nclass AddStudent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            name: '',\n            email: '',\n            level: '',\n            course: '',\n            expectation: '',\n            selectedOption: 'BS',\n            responseMessage: '',\n            isInstered: false\n\n        }\n    }\n    changehandler = (e) => {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n    handleOptionChange = (e) => {\n        this.setState({ selectedOption: e.target.value });\n        console.log(this.state.selectedOption)\n    }\n\n    submitHandler = (e) => {\n        e.preventDefault()\n        console.log(this.state.selectedOption)\n        var body = {\n            \"fullname\": this.state.name,\n            \"email\": this.state.email,\n            \"level\": this.state.selectedOption,\n            \"course\": this.state.course,\n            \"expectation\": this.state.expectation\n        }\n        console.log(body)\n        const url = 'https://kgt1c7bjf4.execute-api.us-east-1.amazonaws.com/dev/students'\n        var that = this;\n        fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(body)\n        }).then((responseText) => {\n            const response = responseText.json();\n            response.then(function (response) {\n                that.setState({ responseMessage: response.success })\n                console.log(that.state.responseMessage)\n                if (that.state.responseMessage) {\n                    that.setState({ isInstered: true })\n                    console.log(that.state.isInstered)\n                }\n\n            });\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n    \n\n    render() {\n        const isInstered = this.state.isInstered;\n        return (\n            <div className=\"card cardStyle\">\n                <div className=\"container searchHeader\">\n                    <div className=\"contactUsHeader\"><br />Add Student</div>\n                    <br />\n                    <form onSubmit={this.submitHandler}>\n                        <div className=\"row\">\n                            <div className=\"col-lg-6\">\n                                <label className=\"userLabel\" htmlFor=\"name\">Name:</label>\n                                <br/>\n                                <input className=\"inputText\" type=\"text\" id=\"name\" value={this.state.name} name=\"name\" onChange={this.changehandler} placeholder=\"Enter your Name\" />\n                            </div>\n                            <div className=\"col-lg-6\">\n                                <label className=\"userLabel\" htmlFor=\"title\">Email:</label>\n                                <br />\n                                <input className=\"inputText\" type=\"text\" id=\"email\" value={this.state.email} name=\"email\" onChange={this.changehandler} placeholder=\"Enter your email\" />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-lg-6\">\n                                <label className=\"userLabel\" htmlFor=\"name\">Level:</label>\n                                <br/>\n                                 <span className=\"radioButton\">\n                                    <label><input type=\"radio\" value=\"BS\" checked={this.state.selectedOption === \"BS\"} onChange={this.handleOptionChange} /> BS </label>\n                                    <label><input type=\"radio\" value=\"MS\" checked={this.state.selectedOption === \"MS\"} onChange={this.handleOptionChange} /> MS </label>\n                                </span>\n                            </div>\n                            <div className=\"col-lg-6\">\n                                <label className=\"userLabel\" htmlFor=\"title\">Course:</label>\n                                <br />\n                                <input className=\"inputText\" type=\"text\" id=\"course\" value={this.state.course} name=\"course\" onChange={this.changehandler} placeholder=\"Enter the course\" />\n                            </div>\n                        </div> \n                        <br /> <br />\n                        <label className=\"userLabel\" htmlFor=\"title\">Expectation:</label><br />\n                        <textarea className=\"textarea\" type=\"text\" id=\"expectation\" value={this.state.expectation} onChange={this.changehandler} name=\"expectation\" placeholder=\"Please mention your expectation in here...\" />\n                        <br /> <br /><br /> <br />\n                        <div>\n                            <button type=\"submit\" className=\"addReviewButton\">Add Student</button>\n                        </div>\n                        <div className=\"email\">\n                            <Link to={`/StudentList`}>\n                                <button className=\"addReviewButton\"  >Cancel</button>\n                            </Link>\n\n                        </div>\n                       {isInstered} \n                        {\n                            isInstered ? (\n                                <Redirect to={`/StudentList`} />\n                            ) : (\n                                    <span>{this.state.responseMessage}</span>\n                                )\n                        }\n                    </form >\n                </div >\n            </div >\n        )\n    }\n}\n\nexport default AddStudent","import React, { Component } from 'react'\nimport '../CSS/Common.css';\nimport AddStudent from './AddStudent'\n\nclass AddStudentComponent extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\" backgroundImage\">\n                    <div className=\"container\">\n                        <AddStudent />\n                    </div>\n\n                </div>\n\n            </div>\n        )\n\n    }\n\n}\n\nexport default AddStudentComponent\n","\nimport React, { Component } from 'react';\nimport '../CSS/Common.css';\nimport { Link } from 'react-router-dom';\n\nclass StudentInfo extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            studentInfo: [],\n            studentId: '',\n            responseMessage: \"\"\n        }\n    }\n\n    componentDidMount() {\n        var str = window.location.href\n        var res = str.split(\"/StudentInfo/\");\n\n        const url = 'https://kgt1c7bjf4.execute-api.us-east-1.amazonaws.com/dev/students/' + res[1]\n        var that = this;\n        fetch(url, {\n            method: 'GET'\n        }).then((responseText) => {\n            const response = responseText.json();\n            response.then(function (response) {\n                that.setState({ studentId: res[1] })\n                that.setState({studentInfo: response.data[0].students})\n            });\n        }).catch(error => {\n            console.log(error)\n        })\n\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"card cardStyle\">\n                    <div className=\"searchHeader info\">\n                        <span>\n                            <Link to={`/StudentList`} >\n                                 <button className = \"backButton\" >\n                                    Back\n                                </button> \n                            </Link>\n                      \n                        </span>\n                        <div>\n                            Name: {this.state.studentInfo.fullname}\n                            <br/><br/>\n                        </div>\n                        <div>\n                            Email: {this.state.studentInfo.email}\n                            <br /><br/>\n                        </div>\n                        <div>\n                            Level: {this.state.studentInfo.level}\n                            <br /><br/>\n                        </div>\n                        <div>\n                            Course: {this.state.studentInfo.course}\n                            <br /><br/>\n                        </div>\n                        <div>\n                            Expectation: {this.state.studentInfo.expectation}\n                            <br /><br/>\n                        </div>\n                    </div>\n                    \n                </div>\n            </div >\n        )\n    }\n\n}\n\nexport default StudentInfo\n\n","import React, { Component } from 'react'\nimport '../CSS/Common.css';\nimport StudentInfo from './StudentInfo'\n\nclass StudentInfoComponent extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\" backgroundImage\">\n                    <div className=\"container\">\n                        <StudentInfo />\n                    </div>\n\n                </div>\n\n            </div>\n        )\n\n    }\n\n}\n\nexport default StudentInfoComponent\n","import React from 'react';\nimport './App.css';\nimport Header from './Components/Header'\nimport StudentListComponent from './Components/StudentListComponent'\nimport AddStudentComponent from './Components/AddStudentComponent'\nimport StudentInfoComponent from './Components/StudentInfoComponent'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/StudentList\" >\n            <Header />\n            <StudentListComponent />\n          </Route>\n          <Route path=\"/AddStudent\">\n            <Header />\n            <AddStudentComponent />\n          </Route>\n           <Route path=\"/StudentInfo/:hotelId\">\n            <Header />\n            <StudentInfoComponent />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n"],"sourceRoot":""}